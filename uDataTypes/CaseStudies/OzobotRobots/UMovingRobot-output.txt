use> open C:\Users\Atenea\Dropbox\UMA\otros\GitRepositories\uncertainty\uDataTypes\CaseStudies\OzobotRobots\UMovingRobot.soil
UMovingRobot.soil> !new Coordinate('initial')
UMovingRobot.soil> !initial.x:=UReal(0.0, 0.01)
UMovingRobot.soil> !initial.y:=UReal(0.0, 0.01)
UMovingRobot.soil> !new Coordinate('target')
UMovingRobot.soil> !target.x:=UReal(10.0, 0.01)
UMovingRobot.soil> !target.y:=UReal(10.0, 0.01)
UMovingRobot.soil>
UMovingRobot.soil> !new Robot('robot')
UMovingRobot.soil> !robot.position:=initial
UMovingRobot.soil> !robot.headsTo:=UReal(0.0, 0.01)
UMovingRobot.soil>
UMovingRobot.soil> !new Movement('m1')
UMovingRobot.soil> !m1.move:=UReal(10.0, 0.01)
UMovingRobot.soil>
UMovingRobot.soil> !new Movement('m2')
UMovingRobot.soil> !m2.rotate:=UReal(1.5707963267948965, 0.01)
UMovingRobot.soil>
UMovingRobot.soil> !new Movement('m3')
UMovingRobot.soil> !m3.move:=UReal(10.0, 0.01)
UMovingRobot.soil>
UMovingRobot.soil> !new Movement('m4')
UMovingRobot.soil> !m4.move:=UReal(14.1421356, 0.01)
UMovingRobot.soil> !m4.rotate:=UReal(5.0, 0.01)* UReal(3.141592653589793,0.01) / UReal(4.0, 0.01)
UMovingRobot.soil>
UMovingRobot.soil> !new Movement('m5')
UMovingRobot.soil> !m5.move:=UReal(14.1421356, 0.01)
UMovingRobot.soil> !m5.rotate:=UReal(3.141592653589793, 0.01) / UReal(4.0, 0.01)
UMovingRobot.soil>
UMovingRobot.soil> !insert(robot,m1) into Plan
UMovingRobot.soil> !insert(robot,m2) into Plan
UMovingRobot.soil> !insert(robot,m3) into Plan
UMovingRobot.soil> !insert(robot,m4) into Plan
UMovingRobot.soil> !insert(robot,m5) into Plan
UMovingRobot.soil>
UMovingRobot.soil> !robot.performAllMoves()
UMovingRobot.soil>
UMovingRobot.soil> ?target.x
-> UReal(10.0,0.01) : UReal
UMovingRobot.soil> ?target.y
-> UReal(10.0,0.01) : UReal
UMovingRobot.soil> ?robot.position.x
-> UReal(10.00019635243198,0.3316664066254812) : UReal
UMovingRobot.soil> ?robot.position.y
-> UReal(9.999803653350988,0.3316520013389277) : UReal
UMovingRobot.soil> ?robot.headsTo
-> UReal(0.7854030721359695,0.005371714271922468) : UReal
UMovingRobot.soil>
UMovingRobot.soil> !b:=robot.position.coincide(target)
UMovingRobot.soil> ?b
-> true : Boolean
UMovingRobot.soil>
use>